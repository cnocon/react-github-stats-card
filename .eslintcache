[{"/Users/cristin/Sites/react-github-stats-card/src/reportWebVitals.js":"1","/Users/cristin/Sites/react-github-stats-card/src/App.js":"2","/Users/cristin/Sites/react-github-stats-card/src/index.js":"3","/Users/cristin/Sites/react-github-stats-card/src/components/Card.js":"4"},{"size":362,"mtime":1609338574402,"results":"5","hashOfConfig":"6"},{"size":178,"mtime":1609338574401,"results":"7","hashOfConfig":"6"},{"size":501,"mtime":1609338574402,"results":"8","hashOfConfig":"6"},{"size":5703,"mtime":1609338574401,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"abjrfu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/cristin/Sites/react-github-stats-card/src/reportWebVitals.js",[],["20","21"],"/Users/cristin/Sites/react-github-stats-card/src/App.js",[],"/Users/cristin/Sites/react-github-stats-card/src/index.js",[],"/Users/cristin/Sites/react-github-stats-card/src/components/Card.js",["22","23","24","25","26"],"import React, { useEffect, useState } from 'react';\nimport('./Card.css');\n\nconst pluralizer = (number, string) => {\n  let newString = string.slice();\n  if (number === 0) {\n    newString = `${string}s`;\n  }\n  else if (number > 1) {\n    newString = `${string}s`;\n  }\n  return newString;\n}\n\nexport default function Card({...props}) {\n  const {username, accessToken, theme} = props;\n  const [user, setUser] = useState({});\n  const [userRepos, setUserRepos] = useState([]);\n  const [userLanguages, setUserLanguages] = useState({});\n\n  const getUserReposData = (username, accessToken = null) => {\n    let options;\n\n    if (accessToken) {\n      options = {\n        'method': 'GET',\n        'headers': {\n          'Accept': 'application/vnd.github.v3+json',\n          'user-agent': `${username}`,\n          'authorization': `token ${accessToken}`\n        }\n      }\n     } else {\n       options = {\n        'method': 'GET',\n        'headers': {\n          'Accept': 'application/vnd.github.v3+json',\n          'user-agent': `${username}`\n        }\n      }\n    };\n  \n    fetch(`https://api.github.com/users/${username}/repos`, options).then(response => {\n        return response.json();\n      }).then(data => {\n        const languagesObj = {};\n        try {\n          data.forEach(repository => {\n            if (repository.language && repository.language !== null) {\n              if (languagesObj[repository.language]) {\n                languagesObj[repository.language] += 1;\n              } else {\n                languagesObj[repository.language] = 1;\n              }\n            }\n          });\n          return [data, languagesObj];\n        } catch(err) {\n          const error = new Error(err);\n          console.error(error);\n        }\n      }).then(payload => {\n        try {\n          setUserRepos(payload[0]);\n          setUserLanguages(payload[1]);\n        } catch(err) {\n          const error = new Error(err);\n          console.error(error);\n        }\n      }).catch(err => {\n        console.error(err);\n        return err;\n      });\n  }\n\n  const getUserData = (username, accessToken = null) => {\n    let options;\n\n    if (accessToken) {\n      options = {\n        'method': 'GET',\n        'headers': {\n          'Accept': 'application/vnd.github.v3+json',\n          'user-agent': `@cnocon/react-github-stats-card`,\n          'authorization': `token ${accessToken}`\n        }\n      };\n    } else {\n      options = {\n        'method': 'GET',\n        'headers': {\n          'Accept': 'application/vnd.github.v3+json',\n          'user-agent': `@cnocon/github-stats-card`\n        }\n      };\n    }\n  \n    fetch(`https://api.github.com/users/${username}`, options)\n      .then(response => {\n        return response.json();\n      }).then(data => {\n        setUser(data);\n      });\n  }\n\n  const sortedLanguages = Object.entries(userLanguages).sort((a, b) => {\n    return a[1][1] - b[1][1];\n  });\n\n  const topLanguages = sortedLanguages.length >= 3 ? sortedLanguages.slice(0,3) : sortedLanguages;\n  const languagesMarkup = topLanguages.map(language => (\n    <li><b>{language[0]}</b><small>{language[1]} {pluralizer(parseInt(language[1]), 'repo')}</small></li>\n  ));\n  const watchersCount = userRepos.reduce((acc, r) => (acc + r.watchers_count), 0);\n  const stargazersCount = userRepos.reduce((acc, r) => (acc + r.stargazers_count), 0);\n  const openIssuesCount = userRepos.reduce((acc, r) => (acc + r.open_issues_count), 0);\n  const stargazers = <li>Starred <b>{stargazersCount}</b> {pluralizer(parseInt(stargazersCount), `time`)}</li>;\n  const watchers = <li><b>{watchersCount}</b> {pluralizer(parseInt(watchersCount), `watcher`)}</li>;\n  const followers = <li>Followed by <b>{user.followers}</b> {pluralizer(parseInt(user.followers), `member`)}</li>;\n  const following = <li>Following <b>{user.following}</b> {pluralizer(parseInt(user.following), `member`)}</li>;\n  const openIssues = <li><b>{openIssuesCount}</b>&nbsp;{pluralizer(parseInt(openIssuesCount), `open issue`)}</li>;\n  const company = !user.company ? `` : <p>Currently at {user.company}</p>;\n  const location = !user.location ? `` : <p>{user.location}</p>;\n  \n  const profileLink = <p><a href={user.html_url} target='_blank' rel='noreferrer nofollow'>@{user.login} on GitHub</a></p>\n  const fullName = !user.name ? `` : <p><b>{user.name}</b></p>;\n  const blog = !user.blog ? `` : <p><a href={user.blog}>{user.blog.split('://')[1]}</a></p>;\n  \n  const createdAt = new Date(user.created_at);\n  const relativeDate = Date.now() - createdAt;\n  const totalYears = Math.round(relativeDate / 1000 / 60 / 60 / 24 / 365);\n  const yearsOnGitHub = <p>{totalYears} {pluralizer(totalYears, 'Year')} of Membership</p>;\n  const footer = <footer><section>{profileLink}{yearsOnGitHub}{company}</section><img src=\"https://github.githubassets.com/images/icons/emoji/octocat.png?v8\" alt=\"Octocat\"/></footer>;\n\n\n  useEffect(() => {\n    if (Object.keys(user).length === 0) {\n      getUserData(username, accessToken);\n    }\n\n    if (userRepos.length === 0 || Object.keys(userLanguages.length === 0)) {\n      getUserReposData(username, accessToken);\n    }\n  }, []);\n\n  return (\n    <div className={theme ? 'github-stats-card' : ''}>\n      <header>\n        {/* <img src={user.avatar_url} alt={user.name}/> */}\n        <h3><a href={user.html_url} target=\"_blank\" rel=\"noopener nofollow\">@{username}</a>&nbsp;on GitHub</h3>{user && user.bio ? <h4>{user.bio}</h4> : ``}<h5><span><b>{user.public_repos}</b>Public Repos</span><span>|</span><span><b>{user.public_gists}</b>Public Gists</span></h5></header>\n      <div><p><b>Top Languages</b></p><ol>{languagesMarkup}</ol><ul>{openIssues}{watchers}{stargazers}{followers}{following}</ul></div>\n      {footer}\n    </div>\n  )\n  \n};",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":123,"column":9,"nodeType":"33","messageId":"34","endLine":123,"endColumn":17},{"ruleId":"31","severity":1,"message":"35","line":126,"column":9,"nodeType":"33","messageId":"34","endLine":126,"endColumn":17},{"ruleId":"31","severity":1,"message":"36","line":127,"column":9,"nodeType":"33","messageId":"34","endLine":127,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":144,"column":6,"nodeType":"39","endLine":144,"endColumn":8,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":150,"column":13,"nodeType":"43","endLine":150,"endColumn":77},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'fullName' is assigned a value but never used.","'blog' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken', 'user', 'userLanguages.length', 'userRepos.length', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["46"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [accessToken, user, userLanguages.length, userRepos.length, username]",{"range":"49","text":"50"},[5093,5095],"[accessToken, user, userLanguages.length, userRepos.length, username]"]